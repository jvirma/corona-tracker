{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","console","log","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.269a264a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__20mpX\",\"card\":\"Cards_card__vIB0t\",\"infected\":\"Cards_infected__7WCgl\",\"recovered\":\"Cards_recovered__172F4\",\"deaths\":\"Cards_deaths__1-3GC\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if(!confirmed) {\r\n      return 'Loading...';\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n              <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                <CardContent>\r\n                  <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                  <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                  <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                </CardContent>\r\n              </Grid>\r\n              <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                  <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                  <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                  <Typography variant=\"body2\">Number of recoveries cases from COVID-19</Typography>\r\n                </CardContent>\r\n              </Grid>\r\n              <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                  <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                  <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                  <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                </CardContent>\r\n              </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if(country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const { data: {confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: {countries } }= await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ( { data: {confirmed, deaths, recovered}, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        \r\n        fetchAPI();\r\n    }, [])\r\n\r\n    const lineChart = (\r\n      dailyData.length\r\n      ? (\r\n        <Line\r\n            data={{\r\n              labels: dailyData.map(({ date }) => date),\r\n              datasets: [{\r\n                data: dailyData.map(({ confirmed }) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n              }, {\r\n                data: dailyData.map(({ deaths }) => deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                fill: true,\r\n              }],\r\n            }}\r\n        />) : null\r\n    );\r\n    console.log(confirmed, deaths, recovered);\r\n    \r\n\r\n    const barChart = (\r\n      confirmed\r\n        ? (\r\n          <Bar\r\n            data={{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets: [{\r\n                label: 'People',\r\n                backgroundColor: [\r\n                  'rgba(0,0,255,0.5)',\r\n                  'rgba(0,255,0,0.5)',\r\n                  'rgba(255,0,0,0.5)',\r\n                ],\r\n                data: [confirmed.value, recovered.value, deaths.value]\r\n              }]\r\n\r\n            }}\r\n            options={{\r\n              legend: { display: false },\r\n              title: { display: true, text: `Current state in ${country}` },\r\n            }}\r\n          />\r\n        ): null\r\n    )\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n          {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ( { handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(()=> {\r\n      const fetchAPI = async () => {\r\n        setFetchedCountries(await fetchCountries());\r\n      }\r\n      fetchAPI();\r\n    }, [setFetchedCountries])\r\n    console.log(fetchedCountries);\r\n    \r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=''>Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/image.png'\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData })\r\n        \r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        \r\n        const fetchedData = await fetchData(country);\r\n        this.setState({ data: fetchedData, country: country })\r\n        \r\n    }\r\n\r\n    render(){\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"covid-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App.js';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2QbuQ\",\"image\":\"App_image__2p2Na\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1R_bW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2cN3h\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}